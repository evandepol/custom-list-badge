name: Auto Tag on HACS Version Change

#on:
#  push:
#    paths:
#      - 'version.json'
#    branches:
#      - main

on:
  workflow_run:
    workflows: ["Validate tests and HACS action"]
    types:
      - completed

jobs:
  tag:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required to access tags

      - name: Download workflow run commit
        run: |
          git fetch origin ${{ github.event.workflow_run.head_branch }}
          git checkout ${{ github.event.workflow_run.head_sha }}

      - name: Check if version.json changed
        id: version_changed
        run: |
          if git show --name-only --pretty="" ${{ github.event.workflow_run.head_sha }} | grep -q "^version.json$"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Stop if version.json not changed
        if: steps.version_changed.outputs.changed == 'false'
        run: |
          echo "version.json not changed, skipping tag/release."
          exit 0

      - name: Read version from version.json
        id: version
        run: |
          VERSION=$(jq -r .version version.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: check
        run: |
          if git rev-parse "v${{ steps.version.outputs.version }}" >/dev/null 2>&1; then
            echo "Tag already exists"
            echo "tag_exists=true" >> $GITHUB_OUTPUT
          else
            echo "tag_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create tag and release
        if: steps.check.outputs.tag_exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: v${{ steps.version.outputs.version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


